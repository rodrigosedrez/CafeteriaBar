@page "/update/{id:int}"
@using CafeteriaFacul_net7.Data

<h1>Update Produto "@_produtoToUpdate.Name"</h1>

<EditForm Model="_produtoToUpdate" OnValidSubmit="UpdateProduto">
    <div class="form-group mb-3">
        <label for="produtoName">Name</label>
        <InputText @bind-Value="_produtoToUpdate.Name" class=form-control id="produtoName" />
    </div>

    <div class="form-group mb-3">
        <label for="produtoDescription">Description</label>
        <InputText @bind-Value="_produtoToUpdate.Description" class=form-control id="produtoDescription" />
    </div>

    <div class="form-group mb-3">
        <label for="produtoImageSource">ImageSource</label>
        <InputText @bind-Value="_produtoToUpdate.ImageSource" class=form-control id="produtoImageSource" />
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">Save</button>
    <button @onclick="@(() => navigationManager.NavigateTo("/adm"))" class="btn btn-secondary">Cancel</button>
</EditForm>

@code
{
    [Inject] ProdutoDataContext produtoDataContext { get; set; } = null!;
    [Inject] NavigationManager navigationManager { get; set; } = null!;
    [Parameter] public int id { get; set; } = default!;


    private Produto _produtoToUpdate = null!;

    protected override async Task OnParametersSetAsync()
    {
            _produtoToUpdate = await produtoDataContext.Produtoss.FindAsync(id);
        
    }

    private async Task UpdateProduto()
    {
        produtoDataContext.Produtoss.Update(_produtoToUpdate);
        await produtoDataContext.SaveChangesAsync();
        navigationManager.NavigateTo("/");
    }
}